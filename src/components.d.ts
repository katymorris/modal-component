/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';

import { AwesomeBackdrop as AwesomeBackdrop } from './components/awesome-backdrop/awesome-backdrop';

interface HTMLAwesomeBackdropElement extends AwesomeBackdrop, HTMLElement {
}
declare var HTMLAwesomeBackdropElement: {
  prototype: HTMLAwesomeBackdropElement;
  new (): HTMLAwesomeBackdropElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "awesome-backdrop": HTMLAwesomeBackdropElement;
  }
  interface ElementTagNameMap {
      "awesome-backdrop": HTMLAwesomeBackdropElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "awesome-backdrop": JSXElements.AwesomeBackdropAttributes;
      }
  }
  namespace JSXElements {
      export interface AwesomeBackdropAttributes extends HTMLAttributes {
        
      }
  }
}

import { AwesomeModal as AwesomeModal } from './components/awesome-modal/awesome-modal';

interface HTMLAwesomeModalElement extends AwesomeModal, HTMLElement {
}
declare var HTMLAwesomeModalElement: {
  prototype: HTMLAwesomeModalElement;
  new (): HTMLAwesomeModalElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "awesome-modal": HTMLAwesomeModalElement;
  }
  interface ElementTagNameMap {
      "awesome-modal": HTMLAwesomeModalElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "awesome-modal": JSXElements.AwesomeModalAttributes;
      }
  }
  namespace JSXElements {
      export interface AwesomeModalAttributes extends HTMLAttributes {
        
          open?: any,
          title?: string,
          content?: string
      }
  }
}

import { MyName as MyName } from './components/my-name/my-name';

interface HTMLMyNameElement extends MyName, HTMLElement {
}
declare var HTMLMyNameElement: {
  prototype: HTMLMyNameElement;
  new (): HTMLMyNameElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "my-name": HTMLMyNameElement;
  }
  interface ElementTagNameMap {
      "my-name": HTMLMyNameElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "my-name": JSXElements.MyNameAttributes;
      }
  }
  namespace JSXElements {
      export interface MyNameAttributes extends HTMLAttributes {
        
          first?: string,
          last?: string
      }
  }
}

